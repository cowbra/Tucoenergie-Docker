version: "3.8"
services:
  postgres:
    image: "postgres:latest"
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      #- /home/bob/podman_docker/cours/Becq-e-master/batiments.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - postgres-bind:/var/lib/postgresql/data
  
  postgis:
    image: "postgis/postgis"
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
  
    
  api:
    image: cowbra/esilv:tuco-server
    restart: always
    volumes:
      - server:/app/node_modules
      - ${PWD}/server:/app
    environment:
      - PGUSER=${POSTGRES_USER}
      - PGHOST=postgres
      - PGDATABASE=${POSTGRES_DB}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGPORT=5432
    links:
      - postgres
    depends_on:
      - postgres


      
  client:
    image: cowbra/esilv:tuco-client
    restart: always
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - client:/app/node_modules
      - ${PWD}/client:/app
    links:
      - api
    depends_on:
      - postgres
      - api


  nginx:
    depends_on:
      - api
      - client
    restart: always
    image: cowbra/esilv:tuco-nginx
    expose:
      - "80"
    networks:
      - nginx-proxy-manager_default
      - default

volumes:
  client:
  server:
  postgres-bind:
    type: bind
    source: ./postgresql
    target: /var/lib/postgresql/data
    create_host_path: true



networks:
  nginx-proxy-manager_default:
    name: nginx-proxy-manager_default
    external: true
